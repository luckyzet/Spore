package com.luckyzz.sporegame.util.invulnerability;

import org.jetbrains.annotations.NotNull;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.function.Predicate;
import java.util.stream.Stream;

class InvulnerabilityStorage implements Iterable<Invulnerability> {

    private final List<Invulnerability> list = new ArrayList<>();

    InvulnerabilityStorage() {
    }

    @Override
    public @NotNull Iterator<Invulnerability> iterator() {
        return list.iterator();
    }

    public @NotNull Stream<Invulnerability> stream() {
        return list.stream();
    }

    public boolean add(@NotNull final Invulnerability invulnerability) {
        return list.add(invulnerability);
    }

    public boolean remove(@NotNull final Invulnerability invulnerability) {
        return list.remove(invulnerability);
    }

    public boolean removeIf(@NotNull final Predicate<Invulnerability> consumer) {
        return list.removeIf(consumer);
    }

    public int size() {
        return list.size();
    }

    public boolean isEmpty() {
        return list.isEmpty();
    }

}
